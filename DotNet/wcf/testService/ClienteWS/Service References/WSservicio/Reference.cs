//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteWS.WSservicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/testService2")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ciudadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contactoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string direccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string paisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tlfField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ciudad {
            get {
                return this.ciudadField;
            }
            set {
                if ((object.ReferenceEquals(this.ciudadField, value) != true)) {
                    this.ciudadField = value;
                    this.RaisePropertyChanged("ciudad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contacto {
            get {
                return this.contactoField;
            }
            set {
                if ((object.ReferenceEquals(this.contactoField, value) != true)) {
                    this.contactoField = value;
                    this.RaisePropertyChanged("contacto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string direccion {
            get {
                return this.direccionField;
            }
            set {
                if ((object.ReferenceEquals(this.direccionField, value) != true)) {
                    this.direccionField = value;
                    this.RaisePropertyChanged("direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pais {
            get {
                return this.paisField;
            }
            set {
                if ((object.ReferenceEquals(this.paisField, value) != true)) {
                    this.paisField = value;
                    this.RaisePropertyChanged("pais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tlf {
            get {
                return this.tlfField;
            }
            set {
                if ((object.ReferenceEquals(this.tlfField, value) != true)) {
                    this.tlfField = value;
                    this.RaisePropertyChanged("tlf");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSservicio.ClienteIService")]
    public interface ClienteIService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/nuevoCliente", ReplyAction="http://tempuri.org/ClienteIService/nuevoClienteResponse")]
        int nuevoCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/nuevoCliente", ReplyAction="http://tempuri.org/ClienteIService/nuevoClienteResponse")]
        System.Threading.Tasks.Task<int> nuevoClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/editarCliente", ReplyAction="http://tempuri.org/ClienteIService/editarClienteResponse")]
        int editarCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/editarCliente", ReplyAction="http://tempuri.org/ClienteIService/editarClienteResponse")]
        System.Threading.Tasks.Task<int> editarClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/eliminarCliente", ReplyAction="http://tempuri.org/ClienteIService/eliminarClienteResponse")]
        int eliminarCliente(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/eliminarCliente", ReplyAction="http://tempuri.org/ClienteIService/eliminarClienteResponse")]
        System.Threading.Tasks.Task<int> eliminarClienteAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/BuscarCliente", ReplyAction="http://tempuri.org/ClienteIService/BuscarClienteResponse")]
        ClienteWS.WSservicio.Cliente[] BuscarCliente(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/BuscarCliente", ReplyAction="http://tempuri.org/ClienteIService/BuscarClienteResponse")]
        System.Threading.Tasks.Task<ClienteWS.WSservicio.Cliente[]> BuscarClienteAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/listarCliente", ReplyAction="http://tempuri.org/ClienteIService/listarClienteResponse")]
        ClienteWS.WSservicio.Cliente[] listarCliente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ClienteIService/listarCliente", ReplyAction="http://tempuri.org/ClienteIService/listarClienteResponse")]
        System.Threading.Tasks.Task<ClienteWS.WSservicio.Cliente[]> listarClienteAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ClienteIServiceChannel : ClienteWS.WSservicio.ClienteIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClienteIServiceClient : System.ServiceModel.ClientBase<ClienteWS.WSservicio.ClienteIService>, ClienteWS.WSservicio.ClienteIService {
        
        public ClienteIServiceClient() {
        }
        
        public ClienteIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClienteIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int nuevoCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.nuevoCliente(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Threading.Tasks.Task<int> nuevoClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.nuevoClienteAsync(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public int editarCliente(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.editarCliente(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public System.Threading.Tasks.Task<int> editarClienteAsync(string CustomerID, string CompanyName, string ContactName, string ContactTitle, string Address, string City, string Region, string PostalCode, string Country, string Phone, string Fax) {
            return base.Channel.editarClienteAsync(CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax);
        }
        
        public int eliminarCliente(string id) {
            return base.Channel.eliminarCliente(id);
        }
        
        public System.Threading.Tasks.Task<int> eliminarClienteAsync(string id) {
            return base.Channel.eliminarClienteAsync(id);
        }
        
        public ClienteWS.WSservicio.Cliente[] BuscarCliente(string id) {
            return base.Channel.BuscarCliente(id);
        }
        
        public System.Threading.Tasks.Task<ClienteWS.WSservicio.Cliente[]> BuscarClienteAsync(string id) {
            return base.Channel.BuscarClienteAsync(id);
        }
        
        public ClienteWS.WSservicio.Cliente[] listarCliente() {
            return base.Channel.listarCliente();
        }
        
        public System.Threading.Tasks.Task<ClienteWS.WSservicio.Cliente[]> listarClienteAsync() {
            return base.Channel.listarClienteAsync();
        }
    }
}
